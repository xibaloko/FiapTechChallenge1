services:
  
  backend_worker_consumer:
    build:
      dockerfile: ./FiapTechChallenge.Consumer/Dockerfile
    container_name: FiapTechChallenge.Worker_Consumer
    ports:
      - "4002:4002"
    depends_on:
      - sql_server
  
  backend_api_producer:
    build:
      dockerfile: ./FiapTechChallenge.Producer/Dockerfile
    container_name: FiapTechChallenge.API_Producer
    ports:
      - "4001:4001"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://*:4001"
      MicrosoftSQLServer__ConnectionString: "Server=sql_server;Database=TechChallenge;User Id=sa;Password=SqlServer2019!;TrustServerCertificate=True;"
    depends_on:
      - sql_server

  backend_api:
    build:
      dockerfile: ./FiapTechChallenge.API/Dockerfile
    container_name: FiapTechChallenge.API
    ports:
      - "4000:4000"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://*:4000"
      MicrosoftSQLServer__ConnectionString: "Server=sql_server;Database=TechChallenge;User Id=sa;Password=SqlServer2019!;TrustServerCertificate=True;"
    depends_on:
      - sql_server

  sql_server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql_server
    environment:
      SA_PASSWORD: "SqlServer2019!"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1444:1433"
    volumes:
      - sql_data:/var/opt/mssql

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus-grafana/prometheus:/etc/prometheus
      - prom_data:/prometheus

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./prometheus-grafana/grafana:/etc/grafana/provisioning/datasources

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "15672:15672"  # Porta da interface de gerenciamento
      - "5672:5672"    # Porta padrão de comunicação
      - "15692:15692"  # Porta para o endpoint de métricas Prometheus
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    command: >
      sh -c "rabbitmq-plugins enable --offline rabbitmq_prometheus &&
             rabbitmq-server"

volumes:
  sql_data:
  prom_data:
  rabbitmq_data:  